{
  "version": 3,
  "sources": ["../../assets/vendor/topbar.js", "../../assets/js/app.js"],
  "sourcesContent": ["/**\n * @license MIT\n * topbar 2.0.0, 2023-02-04\n * https://buunguyen.github.io/topbar\n * Copyright (c) 2021 Buu Nguyen\n */\n(function (window, document) {\n  \"use strict\";\n\n  // https://gist.github.com/paulirish/1579671\n  (function () {\n    var lastTime = 0;\n    var vendors = [\"ms\", \"moz\", \"webkit\", \"o\"];\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n      window.requestAnimationFrame =\n        window[vendors[x] + \"RequestAnimationFrame\"];\n      window.cancelAnimationFrame =\n        window[vendors[x] + \"CancelAnimationFrame\"] ||\n        window[vendors[x] + \"CancelRequestAnimationFrame\"];\n    }\n    if (!window.requestAnimationFrame)\n      window.requestAnimationFrame = function (callback, element) {\n        var currTime = new Date().getTime();\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n        var id = window.setTimeout(function () {\n          callback(currTime + timeToCall);\n        }, timeToCall);\n        lastTime = currTime + timeToCall;\n        return id;\n      };\n    if (!window.cancelAnimationFrame)\n      window.cancelAnimationFrame = function (id) {\n        clearTimeout(id);\n      };\n  })();\n\n  var canvas,\n    currentProgress,\n    showing,\n    progressTimerId = null,\n    fadeTimerId = null,\n    delayTimerId = null,\n    addEvent = function (elem, type, handler) {\n      if (elem.addEventListener) elem.addEventListener(type, handler, false);\n      else if (elem.attachEvent) elem.attachEvent(\"on\" + type, handler);\n      else elem[\"on\" + type] = handler;\n    },\n    options = {\n      autoRun: true,\n      barThickness: 3,\n      barColors: {\n        0: \"rgba(26,  188, 156, .9)\",\n        \".25\": \"rgba(52,  152, 219, .9)\",\n        \".50\": \"rgba(241, 196, 15,  .9)\",\n        \".75\": \"rgba(230, 126, 34,  .9)\",\n        \"1.0\": \"rgba(211, 84,  0,   .9)\",\n      },\n      shadowBlur: 10,\n      shadowColor: \"rgba(0,   0,   0,   .6)\",\n      className: null,\n    },\n    repaint = function () {\n      canvas.width = window.innerWidth;\n      canvas.height = options.barThickness * 5; // need space for shadow\n\n      var ctx = canvas.getContext(\"2d\");\n      ctx.shadowBlur = options.shadowBlur;\n      ctx.shadowColor = options.shadowColor;\n\n      var lineGradient = ctx.createLinearGradient(0, 0, canvas.width, 0);\n      for (var stop in options.barColors)\n        lineGradient.addColorStop(stop, options.barColors[stop]);\n      ctx.lineWidth = options.barThickness;\n      ctx.beginPath();\n      ctx.moveTo(0, options.barThickness / 2);\n      ctx.lineTo(\n        Math.ceil(currentProgress * canvas.width),\n        options.barThickness / 2\n      );\n      ctx.strokeStyle = lineGradient;\n      ctx.stroke();\n    },\n    createCanvas = function () {\n      canvas = document.createElement(\"canvas\");\n      var style = canvas.style;\n      style.position = \"fixed\";\n      style.top = style.left = style.right = style.margin = style.padding = 0;\n      style.zIndex = 100001;\n      style.display = \"none\";\n      if (options.className) canvas.classList.add(options.className);\n      document.body.appendChild(canvas);\n      addEvent(window, \"resize\", repaint);\n    },\n    topbar = {\n      config: function (opts) {\n        for (var key in opts)\n          if (options.hasOwnProperty(key)) options[key] = opts[key];\n      },\n      show: function (delay) {\n        if (showing) return;\n        if (delay) {\n          if (delayTimerId) return;\n          delayTimerId = setTimeout(() => topbar.show(), delay);\n        } else  {\n          showing = true;\n          if (fadeTimerId !== null) window.cancelAnimationFrame(fadeTimerId);\n          if (!canvas) createCanvas();\n          canvas.style.opacity = 1;\n          canvas.style.display = \"block\";\n          topbar.progress(0);\n          if (options.autoRun) {\n            (function loop() {\n              progressTimerId = window.requestAnimationFrame(loop);\n              topbar.progress(\n                \"+\" + 0.05 * Math.pow(1 - Math.sqrt(currentProgress), 2)\n              );\n            })();\n          }\n        }\n      },\n      progress: function (to) {\n        if (typeof to === \"undefined\") return currentProgress;\n        if (typeof to === \"string\") {\n          to =\n            (to.indexOf(\"+\") >= 0 || to.indexOf(\"-\") >= 0\n              ? currentProgress\n              : 0) + parseFloat(to);\n        }\n        currentProgress = to > 1 ? 1 : to;\n        repaint();\n        return currentProgress;\n      },\n      hide: function () {\n        clearTimeout(delayTimerId);\n        delayTimerId = null;\n        if (!showing) return;\n        showing = false;\n        if (progressTimerId != null) {\n          window.cancelAnimationFrame(progressTimerId);\n          progressTimerId = null;\n        }\n        (function loop() {\n          if (topbar.progress(\"+.1\") >= 1) {\n            canvas.style.opacity -= 0.05;\n            if (canvas.style.opacity <= 0.05) {\n              canvas.style.display = \"none\";\n              fadeTimerId = null;\n              return;\n            }\n          }\n          fadeTimerId = window.requestAnimationFrame(loop);\n        })();\n      },\n    };\n\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    module.exports = topbar;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(function () {\n      return topbar;\n    });\n  } else {\n    this.topbar = topbar;\n  }\n}.call(this, window, document));\n", "import topbar from \"../vendor/topbar\"\n\ntopbar.config({barColors: {0: \"#29d\"}, shadowColor: \"rgba(0, 0, 0, .3)\"})\nwindow.addEventListener(\"phx:page-loading-start\", _info => topbar.show(300))\nwindow.addEventListener(\"phx:page-loading-stop\", _info => topbar.hide())\n\nlet Hooks = {}\n\nlet socketPath = document.querySelector(\"html\").getAttribute(\"phx-socket\") || \"/live\"\nlet csrfToken = document .querySelector(\"meta[name='csrf-token']\") .getAttribute(\"content\")\nlet liveSocket = new LiveView.LiveSocket(socketPath, Phoenix.Socket, {\n  hooks: Hooks,\n  params: { _csrf_token: csrfToken },\n})\nliveSocket.connect()\nwindow.liveSocket = liveSocket\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,8BAAAA,SAAA;AAMA,KAAC,SAAUC,SAAQC,WAAU;AAC3B;AAGA,OAAC,WAAY;AACX,YAAI,WAAW;AACf,YAAI,UAAU,CAAC,MAAM,OAAO,UAAU,GAAG;AACzC,iBAAS,IAAI,GAAG,IAAI,QAAQ,UAAU,CAACD,QAAO,uBAAuB,EAAE,GAAG;AACxE,UAAAA,QAAO,wBACLA,QAAO,QAAQ,CAAC,IAAI,uBAAuB;AAC7C,UAAAA,QAAO,uBACLA,QAAO,QAAQ,CAAC,IAAI,sBAAsB,KAC1CA,QAAO,QAAQ,CAAC,IAAI,6BAA6B;AAAA,QACrD;AACA,YAAI,CAACA,QAAO;AACV,UAAAA,QAAO,wBAAwB,SAAU,UAAU,SAAS;AAC1D,gBAAI,YAAW,oBAAI,KAAK,GAAE,QAAQ;AAClC,gBAAI,aAAa,KAAK,IAAI,GAAG,MAAM,WAAW,SAAS;AACvD,gBAAI,KAAKA,QAAO,WAAW,WAAY;AACrC,uBAAS,WAAW,UAAU;AAAA,YAChC,GAAG,UAAU;AACb,uBAAW,WAAW;AACtB,mBAAO;AAAA,UACT;AACF,YAAI,CAACA,QAAO;AACV,UAAAA,QAAO,uBAAuB,SAAU,IAAI;AAC1C,yBAAa,EAAE;AAAA,UACjB;AAAA,MACJ,GAAG;AAEH,UAAI,QACF,iBACA,SACA,kBAAkB,MAClB,cAAc,MACd,eAAe,MACf,WAAW,SAAU,MAAM,MAAM,SAAS;AACxC,YAAI,KAAK;AAAkB,eAAK,iBAAiB,MAAM,SAAS,KAAK;AAAA,iBAC5D,KAAK;AAAa,eAAK,YAAY,OAAO,MAAM,OAAO;AAAA;AAC3D,eAAK,OAAO,IAAI,IAAI;AAAA,MAC3B,GACA,UAAU;AAAA,QACR,SAAS;AAAA,QACT,cAAc;AAAA,QACd,WAAW;AAAA,UACT,GAAG;AAAA,UACH,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,QACT;AAAA,QACA,YAAY;AAAA,QACZ,aAAa;AAAA,QACb,WAAW;AAAA,MACb,GACA,UAAU,WAAY;AACpB,eAAO,QAAQA,QAAO;AACtB,eAAO,SAAS,QAAQ,eAAe;AAEvC,YAAI,MAAM,OAAO,WAAW,IAAI;AAChC,YAAI,aAAa,QAAQ;AACzB,YAAI,cAAc,QAAQ;AAE1B,YAAI,eAAe,IAAI,qBAAqB,GAAG,GAAG,OAAO,OAAO,CAAC;AACjE,iBAAS,QAAQ,QAAQ;AACvB,uBAAa,aAAa,MAAM,QAAQ,UAAU,IAAI,CAAC;AACzD,YAAI,YAAY,QAAQ;AACxB,YAAI,UAAU;AACd,YAAI,OAAO,GAAG,QAAQ,eAAe,CAAC;AACtC,YAAI;AAAA,UACF,KAAK,KAAK,kBAAkB,OAAO,KAAK;AAAA,UACxC,QAAQ,eAAe;AAAA,QACzB;AACA,YAAI,cAAc;AAClB,YAAI,OAAO;AAAA,MACb,GACA,eAAe,WAAY;AACzB,iBAASC,UAAS,cAAc,QAAQ;AACxC,YAAI,QAAQ,OAAO;AACnB,cAAM,WAAW;AACjB,cAAM,MAAM,MAAM,OAAO,MAAM,QAAQ,MAAM,SAAS,MAAM,UAAU;AACtE,cAAM,SAAS;AACf,cAAM,UAAU;AAChB,YAAI,QAAQ;AAAW,iBAAO,UAAU,IAAI,QAAQ,SAAS;AAC7D,QAAAA,UAAS,KAAK,YAAY,MAAM;AAChC,iBAASD,SAAQ,UAAU,OAAO;AAAA,MACpC,GACAE,UAAS;AAAA,QACP,QAAQ,SAAU,MAAM;AACtB,mBAAS,OAAO;AACd,gBAAI,QAAQ,eAAe,GAAG;AAAG,sBAAQ,GAAG,IAAI,KAAK,GAAG;AAAA,QAC5D;AAAA,QACA,MAAM,SAAU,OAAO;AACrB,cAAI;AAAS;AACb,cAAI,OAAO;AACT,gBAAI;AAAc;AAClB,2BAAe,WAAW,MAAMA,QAAO,KAAK,GAAG,KAAK;AAAA,UACtD,OAAQ;AACN,sBAAU;AACV,gBAAI,gBAAgB;AAAM,cAAAF,QAAO,qBAAqB,WAAW;AACjE,gBAAI,CAAC;AAAQ,2BAAa;AAC1B,mBAAO,MAAM,UAAU;AACvB,mBAAO,MAAM,UAAU;AACvB,YAAAE,QAAO,SAAS,CAAC;AACjB,gBAAI,QAAQ,SAAS;AACnB,eAAC,SAAS,OAAO;AACf,kCAAkBF,QAAO,sBAAsB,IAAI;AACnD,gBAAAE,QAAO;AAAA,kBACL,MAAM,OAAO,KAAK,IAAI,IAAI,KAAK,KAAK,eAAe,GAAG,CAAC;AAAA,gBACzD;AAAA,cACF,GAAG;AAAA,YACL;AAAA,UACF;AAAA,QACF;AAAA,QACA,UAAU,SAAU,IAAI;AACtB,cAAI,OAAO,OAAO;AAAa,mBAAO;AACtC,cAAI,OAAO,OAAO,UAAU;AAC1B,kBACG,GAAG,QAAQ,GAAG,KAAK,KAAK,GAAG,QAAQ,GAAG,KAAK,IACxC,kBACA,KAAK,WAAW,EAAE;AAAA,UAC1B;AACA,4BAAkB,KAAK,IAAI,IAAI;AAC/B,kBAAQ;AACR,iBAAO;AAAA,QACT;AAAA,QACA,MAAM,WAAY;AAChB,uBAAa,YAAY;AACzB,yBAAe;AACf,cAAI,CAAC;AAAS;AACd,oBAAU;AACV,cAAI,mBAAmB,MAAM;AAC3B,YAAAF,QAAO,qBAAqB,eAAe;AAC3C,8BAAkB;AAAA,UACpB;AACA,WAAC,SAAS,OAAO;AACf,gBAAIE,QAAO,SAAS,KAAK,KAAK,GAAG;AAC/B,qBAAO,MAAM,WAAW;AACxB,kBAAI,OAAO,MAAM,WAAW,MAAM;AAChC,uBAAO,MAAM,UAAU;AACvB,8BAAc;AACd;AAAA,cACF;AAAA,YACF;AACA,0BAAcF,QAAO,sBAAsB,IAAI;AAAA,UACjD,GAAG;AAAA,QACL;AAAA,MACF;AAEF,UAAI,OAAOD,YAAW,YAAY,OAAOA,QAAO,YAAY,UAAU;AACpE,QAAAA,QAAO,UAAUG;AAAA,MACnB,WAAW,OAAO,WAAW,cAAc,OAAO,KAAK;AACrD,eAAO,WAAY;AACjB,iBAAOA;AAAA,QACT,CAAC;AAAA,MACH,OAAO;AACL,aAAK,SAASA;AAAA,MAChB;AAAA,IACF,GAAE,KAAK,SAAM,QAAQ,QAAQ;AAAA;AAAA;;;ACpK7B,oBAAmB;AAEnB,cAAAC,QAAO,OAAO,EAAC,WAAW,EAAC,GAAG,OAAM,GAAG,aAAa,oBAAmB,CAAC;AACxE,OAAO,iBAAiB,0BAA0B,WAAS,cAAAA,QAAO,KAAK,GAAG,CAAC;AAC3E,OAAO,iBAAiB,yBAAyB,WAAS,cAAAA,QAAO,KAAK,CAAC;AAEvE,IAAI,QAAQ,CAAC;AAEb,IAAI,aAAa,SAAS,cAAc,MAAM,EAAE,aAAa,YAAY,KAAK;AAC9E,IAAI,YAAY,SAAU,cAAc,yBAAyB,EAAG,aAAa,SAAS;AAC1F,IAAI,aAAa,IAAI,SAAS,WAAW,YAAY,QAAQ,QAAQ;AAAA,EACnE,OAAO;AAAA,EACP,QAAQ,EAAE,aAAa,UAAU;AACnC,CAAC;AACD,WAAW,QAAQ;AACnB,OAAO,aAAa;",
  "names": ["module", "window", "document", "topbar", "topbar"]
}
