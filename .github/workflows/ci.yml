name: CI

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  test:
    name: "test: OTP ${{matrix.otp}} | Elixir ${{matrix.elixir}} | Phoenix ${{matrix.phoenix-version}} | LiveView ${{matrix.phoenix-live-view-version}}"

    strategy:
      fail-fast: false
      matrix:
        include:
          # minimum required versions
          - otp: "25.1"
            elixir: "1.14.0"
            phoenix-version: "1.7.0"
            phoenix-live-view-version: "0.20.2"

          # latest
          - otp: "27"
            elixir: "1.17"
            phoenix-version: "~> 1.7"
            phoenix-live-view-version: "~> 0.20"

    env:
      MIX_ENV: test
      PHOENIX_VERSION: ${{matrix.phoenix-version}}
      PHOENIX_LIVE_VIEW_VERSION: ${{matrix.phoenix-live-view-version}}

    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgres:13.1
        env:
          POSTGRES_DB: beacon_live_admin_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Cache mix deps
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: |
            deps
            _build
          key: mix-${{ env.MIX_ENV }}-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ matrix.phoenix-version }}-${{ matrix.phoenix-live-view-version }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            mix-${{ env.MIX_ENV }}-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ matrix.phoenix-version }}-${{ matrix.phoenix-live-view-version }}-${{ hashFiles('**/mix.lock') }}

      - run: mix deps.get

      - run: mix tailwind.install --no-assets

      - name: Run tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:${{job.services.postgres.ports[5432]}}/beacon_live_admin_test
        run: |
          epmd -daemon
          mix test

  e2e-test:
    name: "e2e-test: OTP ${{matrix.otp}} | Elixir ${{matrix.elixir}} | Phoenix ${{matrix.phoenix-version}} | LiveView ${{matrix.phoenix-live-view-version}}"

    strategy:
      fail-fast: false
      matrix:
        include:
          # latest
          - otp: "27"
            elixir: "1.17"
            phoenix-version: "~> 1.7"
            phoenix-live-view-version: "~> 0.20"

    env:
      MIX_ENV: e2e
      ImageOS: ubuntu20
      HOME: /root

    runs-on: ubuntu-20.04
    container:
      image: mcr.microsoft.com/playwright:v1.47.1-jammy

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install OS packages
        run: apt update && apt -y install unzip libssl-dev

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Cache mix deps
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: |
            deps
            _build
          key: mix-${{ env.MIX_ENV }}-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ matrix.phoenix-version }}-${{ matrix.phoenix-live-view-version }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            mix-${{ env.MIX_ENV }}-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ matrix.phoenix-version }}-${{ matrix.phoenix-live-view-version }}-${{ hashFiles('**/mix.lock') }}

      - run: mix deps.get

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm run setup

      - run: npm run e2e:test

  quality:
    name: "quality: OTP ${{matrix.otp}} | Elixir ${{matrix.elixir}} | Phoenix ${{matrix.phoenix-version}} | LiveView ${{matrix.phoenix-live-view-version}}"

    strategy:
      fail-fast: false
      matrix:
        include:
          # latest
          - otp: "27"
            elixir: "1.17"
            phoenix-version: "~> 1.7"
            phoenix-live-view-version: "~> 0.20"

    env:
      MIX_ENV: dev

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Cache mix deps
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: |
            deps
            _build
          key: mix-${{ env.MIX_ENV }}-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ matrix.phoenix-version }}-${{ matrix.phoenix-live-view-version }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            mix-${{ env.MIX_ENV }}-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ matrix.phoenix-version }}-${{ matrix.phoenix-live-view-version }}-${{ hashFiles('**/mix.lock') }}

      - run: mix deps.get

      - run: mix compile --warnings-as-errors

      - run: mix assets.setup

      - run: mix format.all

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: auto format code

      - run: mix format.all.check

      - run: mix deps.unlock --check-unused
